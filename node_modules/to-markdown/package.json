{
  "_args": [
    [
      {
        "raw": "to-markdown@^3.0.1",
        "scope": null,
        "escapedName": "to-markdown",
        "name": "to-markdown",
        "rawSpec": "^3.0.1",
        "spec": ">=3.0.1 <4.0.0",
        "type": "range"
      },
      "/Users/Alice/libs/ReactJS_15.x/seed-project"
    ]
  ],
  "_cnpm_publish_time": 1489730301772,
  "_from": "to-markdown@^3.0.1",
  "_hasShrinkwrap": false,
  "_id": "to-markdown@3.0.4",
  "_location": "/to-markdown",
  "_nodeVersion": "6.9.3",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/to-markdown-3.0.4.tgz_1489730299988_0.7179745242465287"
  },
  "_npmUser": {
    "name": "domchristie",
    "email": "christiedom@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "to-markdown@^3.0.1",
    "scope": null,
    "escapedName": "to-markdown",
    "name": "to-markdown",
    "rawSpec": "^3.0.1",
    "spec": ">=3.0.1 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "http://r.cnpmjs.org/to-markdown/download/to-markdown-3.0.4.tgz",
  "_shasum": "3c7822f9286bc294ff37f9e0e5e23154c122ce69",
  "_shrinkwrap": null,
  "_spec": "to-markdown@^3.0.1",
  "_where": "/Users/Alice/libs/ReactJS_15.x/seed-project",
  "author": {
    "name": "Dom Christie"
  },
  "browser": {
    "jsdom": false
  },
  "bugs": {
    "url": "https://github.com/domchristie/to-markdown/issues"
  },
  "dependencies": {
    "collapse-whitespace": "1.1.2",
    "jsdom": "^9.0.0"
  },
  "description": "HTML-to-Markdown converter",
  "devDependencies": {
    "qunit": "^0.7.6",
    "saucie": "0.1.3",
    "standard": "^6.0.8",
    "testem": "^0.8.2",
    "watchify": "^2.5.0"
  },
  "directories": {},
  "dist": {
    "shasum": "3c7822f9286bc294ff37f9e0e5e23154c122ce69",
    "size": 13562,
    "noattachment": false,
    "tarball": "http://r.cnpmjs.org/to-markdown/download/to-markdown-3.0.4.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "0ffa85ad0194e541dddd2fd5d6c2065adb0d4d41",
  "homepage": "https://github.com/domchristie/to-markdown#readme",
  "keywords": [
    "markdown"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "domchristie",
      "email": "christiedom@gmail.com"
    }
  ],
  "name": "to-markdown",
  "optionalDependencies": {},
  "publish_time": 1489730301772,
  "readme": "# to-markdown\n\nAn HTML to Markdown converter written in JavaScript.\n\nThe API is as follows:\n\n```js\ntoMarkdown(stringOfHTML, options);\n```\n\n**Note** to-markdown v2+ runs on Node 4+. For a version compatible with Node 0.10 - 0.12, please use [to-markdown v1.x](https://github.com/domchristie/to-markdown/tree/1.x).\n\n## Installation\n\n### Browser\n\nDownload the compiled script located at `dist/to-markdown.js`.\n\n```html\n<script src=\"PATH/TO/to-markdown.js\"></script>\n<script>toMarkdown('<h1>Hello world!</h1>')</script>\n```\n\nOr with **Bower**:\n\n```sh\n$ bower install to-markdown\n```\n\n```html\n<script src=\"PATH/TO/bower_components/to-markdown/dist/to-markdown.js\"></script>\n<script>toMarkdown('<h1>Hello world!</h1>')</script>\n```\n\n### Node.js\n\nInstall the `to-markdown` module:\n\n```sh\n$ npm install to-markdown\n```\n\nThen you can use it like below:\n\n```js\nvar toMarkdown = require('to-markdown');\ntoMarkdown('<h1>Hello world!</h1>');\n```\n\n(Note it is no longer necessary to call `.toMarkdown` on the required module as of v1.)\n\n## Options\n\n### `converters` (array)\n\nto-markdown can be extended by passing in an array of converters to the options object:\n\n```js\ntoMarkdown(stringOfHTML, { converters: [converter1, converter2, …] });\n```\n\nA converter object consists of a **filter**, and a **replacement**. This example from the source replaces `code` elements:\n\n```js\n{\n  filter: 'code',\n  replacement: function(content) {\n    return '`' + content + '`';\n  }\n}\n```\n\n#### `filter` (string|array|function)\n\nThe filter property determines whether or not an element should be replaced. DOM nodes can be selected simply by filtering by tag name, with strings or with arrays of strings:\n\n * `filter: 'p'` will select `p` elements\n * `filter: ['em', 'i']` will select `em` or `i` elements\n\nAlternatively, the filter can be a function that returns a boolean depending on whether a given node should be replaced. The function is passed a DOM node as its only argument. For example, the following will match any `span` element with an `italic` font style:\n\n```js\nfilter: function (node) {\n  return node.nodeName === 'SPAN' && /italic/i.test(node.style.fontStyle);\n}\n```\n\n#### `replacement` (function)\n\nThe replacement function determines how an element should be converted. It should return the markdown string for a given node. The function is passed the node’s content, as well as the node itself (used in more complex conversions). It is called in the context of `toMarkdown`, and therefore has access to the methods detailed below.\n\nThe following converter replaces heading elements (`h1`-`h6`):\n\n```js\n{\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function(innerHTML, node) {\n    var hLevel = node.tagName.charAt(1);\n    var hPrefix = '';\n    for(var i = 0; i < hLevel; i++) {\n      hPrefix += '#';\n    }\n    return '\\n' + hPrefix + ' ' + innerHTML + '\\n\\n';\n  }\n}\n```\n\n### `gfm` (boolean)\n\nto-markdown has beta support for GitHub flavored markdown (GFM). Set the `gfm` option to true:\n\n```js\ntoMarkdown('<del>Hello world!</del>', { gfm: true });\n```\n\n## Methods\n\nThe following methods can be called on the `toMarkdown` object.\n\n### `isBlock(node)`\n\nReturns `true`/`false` depending on whether the element is block level.\n\n### `isVoid(node)`\n\nReturns `true`/`false` depending on whether the element is [void](http://www.w3.org/TR/html-markup/syntax.html#syntax-elements).\n\n### `outer(node)`\n\nReturns the content of the node along with the element itself.\n\n## Development\n\nFirst make sure you have node.js/npm installed, then:\n\n```sh\n$ npm install --dev\n$ bower install --dev\n```\n\nAutomatically browserify the module when source files change by running:\n\n```sh\n$ npm start\n```\n\n### Tests\n\nTo run the tests in the browser, open `test/index.html`.\n\nTo run in node.js:\n\n```sh\n$ npm test\n```\n\n## Credits\n\nThanks to all [contributors](https://github.com/domchristie/to-markdown/graphs/contributors). Also, thanks to [Alex Cornejo](https://github.com/acornejo) for advice and inspiration for the breadth-first search algorithm.\n\n## Licence\n\nto-markdown is copyright &copy; 2011+ [Dom Christie](http://domchristie.co.uk) and released under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/domchristie/to-markdown.git"
  },
  "scripts": {
    "start": "watchify -s toMarkdown -o dist/to-markdown.js index.js -v",
    "test": "standard index.js lib/**/*.js test/**/*.js && qunit -c ./index.js -t ./test/to-markdown-test.js ./test/gfm-test.js"
  },
  "url": "http://domchristie.github.com/to-markdown/",
  "version": "3.0.4"
}
